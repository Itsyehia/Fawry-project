name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  DOCKER_BUILDKIT: 1
  BUILDKIT_PROGRESS: plain

jobs:

  test_and_coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          set -x
          python -m pip install --upgrade pip
          pip install -r flaskapp-database/flaskapp/requirements.txt
          pip install pytest pytest-cov

      - name: Run pytest with coverage
        run: |
          cd flaskapp-database/flaskapp
          PYTHONPATH=. pytest -v --cov=app --cov-report=xml --cov-report=html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: flaskapp-database/flaskapp/htmlcov

  flake8:
    runs-on: ubuntu-latest
    needs: test_and_coverage
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install flake8
        run: |
          set -x
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: flake8 . --show-source --statistics

  gitleaks: 
    runs-on: ubuntu-latest
    needs: flake8
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gitleaks Secret Scan
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-git --redact --exit-code 1
        continue-on-error: true

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    needs: gitleaks
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  build_and_push:
    runs-on: ubuntu-latest
    needs: codeql
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push flaskapp image
        uses: docker/build-push-action@v4
        with:
          context: ./flaskapp-database/flaskapp
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/flaskapp:latest
          provenance: false
          no-cache: true
          outputs: type=registry
          build-args: |
            BUILDKIT_PROGRESS=plain

      - name: Build & push mysql image
        uses: docker/build-push-action@v4
        with:
          context: ./flaskapp-database/mysql
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/mysql:latest
          provenance: false
          no-cache: true
          outputs: type=registry
          build-args: |
            BUILDKIT_PROGRESS=plain

  trivy_scan:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin latest

      - name: Scan flaskapp image
        run: |
          trivy image --no-progress --format json --output trivy-flaskapp-report.json ${{ secrets.DOCKER_USERNAME }}/flaskapp:latest

      - name: Scan mysql image
        run: |
          trivy image --no-progress --format json --output trivy-mysql-report.json ${{ secrets.DOCKER_USERNAME }}/mysql:latest

      - name: Upload Trivy Reports
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: |
            trivy-flaskapp-report.json
            trivy-mysql-report.json

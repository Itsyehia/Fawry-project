name: Lint (flake8)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

# pipeline stages
jobs:
  # Run unit tests with coverage.
  test_and_coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # todo: add pytest and pytest-cov inside the requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r flaskapp-database/flaskapp/requirements.txt
          pip install pytest pytest-cov

      - name: Run unit tests with coverage
        #  runs all unit tests while tracking coverage for the Flask app's code
        ## Creates a detailed HTML page showing coverage breakdown
        ## Generates a machine-readable XML report
        ## Runs all tests while tracking coverage for the 'app' module
        run: |
          cd flaskapp-database/flaskapp
          PYTHONPATH=. pytest --cov=app --cov-report=xml --cov-report=html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          # uploads the coverage report to the GitHub Actions workflow
          name: coverage-report
          # Path to HTML coverage report
          path: flaskapp-database/flaskapp/htmlcov


  # Lint with flake8.
  flake8:
    runs-on: ubuntu-latest
    needs: test_and_coverage
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      # todo: add flake8 inside the requirements.txt
      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: flake8 .

  # Build and push Docker images (FlaskApp & MySQL). 
  build_and_push:
    runs-on: ubuntu-latest
    needs: flake8
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push FlaskApp image
        uses: docker/build-push-action@v4
        with:
          context: ./flaskapp-database/flaskapp
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/flaskapp:latest

      - name: Build and push MySQL image
        uses: docker/build-push-action@v4
        with:
          context: ./flaskapp-database/mysql
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/mysql:latest